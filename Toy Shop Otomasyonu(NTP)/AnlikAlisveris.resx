<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QDqRXhpZgAATU0AKgAAAAgAAQEOAAIAAADHAAAAGgAAAABSb3Rh
        dGlvbiBpY29uIHZlY3Rvci4gUmVwZWF0IG9yIHJlbG9hZCBzeW1ib2wgaWNvbiBpbGx1c3RyYXRpb24u
        IFJvdGF0ZSBhcnJvdyBsb2dvIGRlc2lnbiBpbnNwaXJhdGlvbi4gQXJyb3cgbG9vcCBpY29uLCB2ZWN0
        b3IgYXJyb3cgc2lnbiwgaXNvbGF0ZWQgY3VydmVkIGFycm93IHN5bWJvbC4gUmV0dXJuIG9yIGFnYWlu
        IHN5bWJvbCB1aSwgdXgAAP/bAEMACgcHCAcGCggICAsKCgsOGBAODQ0OHRUWERgjHyUkIh8iISYrNy8m
        KTQpISIwQTE0OTs+Pj4lLkRJQzxINz0+O//bAEMBCgsLDg0OHBAQHDsoIig7Ozs7Ozs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O//CABEIAiwCZAMBEQACEQEDEQH/xAAbAAEA
        AgMBAQAAAAAAAAAAAAAABQYBAwQHAv/EABcBAQEBAQAAAAAAAAAAAAAAAAABAgP/2gAMAwEAAhADEAAA
        AbmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAADnIiyLs4K5TVZg+zol7CRll4kpcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGADIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//EACoQAAEE
        AQMDBAIDAQEAAAAAAAMBAgQFABATUBEgQBIUMDEVYCE0oCIj/9oACAEBAAEFAv8AHk+QEeOtIrcW5Fn5
        pM/NYl0zG28dcZPivxHNcn6CafHBhbgi4SUcvwtc5iis5I8DbidjCMI3WwsFC5TmVYlmQb+Wk2IY+Hnn
        P87CPE6PbqmDKwrcMquNpXv3IXJmMMDJVkQ/ewJSY2uluz8VKz8TJxauWmOhyWYqKncIxAOiWbDZOZtz
        dKZ/UPJTJzIqGMQ7+wMGQfBU40wcQAu9zGvQtZGJhqgrMexw3djnufrUP9MrkZ89I6Ocr3axoRpOR64A
        PlIIZmyahUxzXMd2w37cvkJ81IzFVXLoiK5YdUiYidE+RV6Ie46OZclTCTIUxpRoN3Z9YN24LjpclsUL
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAATHATGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9EkkkmqADbgAAAAAAAAAAAAAAAA
        AAAAAAAAAAUEkkkkkk04YkgAAAAAAAAAAAAAAAAAAAAAAAADckknCsqkklKE4AAAAAAAAAAAAAAAAAAA
        AAAAAA4kmJwAASskkkngAAAAAAAAAAAAAAAAAAAAAAAB0kiwAAAAAIUkkoAAAAAAAAAAAAAAAAAAAAAA
        AC0mwAAAAAAQcYkmgAAAAAAAAAAAAAAAAAAAAAADkmkAAAAAABEkkkmgAAAAAAAAAAAAAAAAAAAAACYm
        kAAAAAAAEkkkkwAAAAAAAAAAAAAAAAAAAAAAAkoAAAAAAACL4kkkgAAAAAAAAAAAAAAAAAAAAAIk8AAA
        AAAAAACdfG4AAAAAAAAAAAAAAAAAAAAAAEjAAAAAAAAAAAAR8AAAAAAAAAAAAAAAAAAAAAAYmAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEk4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAUmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABE4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACEkgAAAAAAAAAAAAADi4AAAAAAAAAAAAAAAAAAAQksAAAAAAAAAAAAAAMm
        AAAAAAAAAAAAAAAAAAAAUlgAAAAAAAAAAAAADkgAAAAAAAAAAAAAAAAAAADEkAAAAAAAAAAAAAAQlAAA
        AAAAAAAAAAAAAAAAAQnAAAAAAAAAAAAAATEkAAAAAAAAAAAAAAAAAAADk8AAAAAAAAAAAAABklgAAAAA
        AAAAAAAAAAAAAAInQAAAAAAAAAAAAAYlQAAAAAAAAAAAAAAAAAAABEmgAAAAAAAAAAAAQE8AAAAAAAAA
        AAAAAAAAAAACkyAAAAAAAAAAAAAkkgAAAAAAAAAAAAAAAAAAAAUk0AAAAAAAAAAAAAkQAAAAAAAAAAAA
        AAAAAAAACAlIAAAAAAAAAAAQkkAAAAAAAAAAAAAAAAAAAAAC0kwAAAAAAAAAAGksAAAAAAAAAAAAAAAA
        AAAAAAAEngAAAAAAAAAGk5AAAAAAAAAAAAAAAAAAAAAAACkm4AAAAAAAAak2gAAAAAAAAAAAAAAAAAAA
        AAAAAElGAAAAAABck1gAAAAAAAAAAAAAAAAAAAAAAAACkkiwAAAAMAkmgAAAAAAAAAAAAAAAAAAAAAAA
        AACUklNU+qSkk5gAAAAAAAAAAAAAAAAAAAAAAAAAACwkkkkkkkkiAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        CG0kkkkk6IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLzGlWEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>